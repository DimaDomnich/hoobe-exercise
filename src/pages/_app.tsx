import { ChangeEvent, useCallback, useEffect, useState } from 'react';
import type { Metadata } from 'next';
import type { AppProps } from 'next/app';
import { Poppins } from 'next/font/google';
import clsx from 'clsx';
import { ThemeContext, useTheme } from '@/hooks/useTheme';
import ThemeSwitch from '@/components/theme-switch';
import layoutStyles from '../styles/layout.module.scss';
import '../globals.css';

const poppins = Poppins({
  weight: ['400', '500', '600', '700'],
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'hoo.be coding exercise',
  description: 'Generated by create next app',
};

export default function App({ Component, pageProps }: AppProps) {
  const { theme, setTheme } = useTheme();
  const [isClient, setIsClient] = useState(false);

  useEffect(() => {
    setIsClient(true);
  }, []);

  const isDarkTheme = isClient && theme === 'dark';

  const handleThemeSwitch = useCallback<
    (e: ChangeEvent<HTMLInputElement>, checked: boolean) => void
  >(
    (_, checked) => {
      setTheme(checked ? 'dark' : 'light');
    },
    [setTheme]
  );

  return (
    <ThemeContext.Provider value={theme}>
      <main
        className={clsx(poppins.className, layoutStyles.layoutContainer, {
          darkTheme: isDarkTheme,
        })}
      >
        <ThemeSwitch
          className={layoutStyles.themeSwitch}
          sx={{
            position: 'fixed',
          }}
          checked={isDarkTheme}
          onChange={handleThemeSwitch}
        />
        <Component {...pageProps} />
      </main>
    </ThemeContext.Provider>
  );
}
